# Generated by Django 4.1.6 on 2023-02-19 17:47

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='Какая-то комания', max_length=200, null=True, verbose_name='Название компании')),
                ('unp', models.IntegerField(unique=True, verbose_name='УНП компании')),
                ('phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='Телефон')),
                ('paid_to', models.DateField(blank=True, default=datetime.datetime(2000, 1, 1, 0, 0), null=True, verbose_name='Оплачено до:')),
                ('orders_paid', models.IntegerField(default=0, verbose_name='Оплаченных заказов осталось')),
            ],
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='ФИО разработчика')),
                ('phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='Телефон')),
                ('telegram', models.CharField(max_length=200, unique=True, verbose_name='Телеграм')),
                ('access_to_orders', models.BooleanField(verbose_name='Есть ли доступ к заказам')),
                ('state', models.CharField(blank=True, max_length=200, verbose_name='Состояние бота')),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='ФИО менеджера')),
                ('phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='Телефон')),
                ('telegram', models.CharField(max_length=200, unique=True, verbose_name='Телеграм')),
                ('state', models.CharField(blank=True, max_length=200, verbose_name='Состояние бота')),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='ФИО пользователя')),
                ('phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='Телефон')),
                ('telegram', models.CharField(max_length=200, unique=True, verbose_name='Телеграм')),
                ('state', models.CharField(blank=True, max_length=200, verbose_name='Состояние бота')),
            ],
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название тарифа')),
                ('max_requests', models.IntegerField(verbose_name='Максимальное кол-во обращений в месяц')),
                ('max_time_for_ansver', models.DurationField(verbose_name='Максимальное время ответа на заявку')),
                ('booking_the_developer', models.BooleanField(verbose_name='Возможность закрепить Подрядчика')),
                ('developer_contact', models.BooleanField(verbose_name='Возможность получить контакты Подрядчика')),
                ('price', models.IntegerField(verbose_name='Цена:')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='ФИО пользователя')),
                ('phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='Телефон')),
                ('telegram', models.CharField(max_length=200, unique=True, verbose_name='Телеграм')),
                ('state', models.CharField(blank=True, max_length=200, verbose_name='Состояние бота')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='users', to='tgbot.company')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание заказа')),
                ('order_time', models.DateTimeField(auto_now_add=True, verbose_name='Время получения заказ')),
                ('answer_time', models.DateTimeField(blank=True, null=True, verbose_name='Время ответа на заказ')),
                ('status', models.CharField(choices=[('N', 'New'), ('W', 'In work'), ('C', 'Completed')], max_length=1, verbose_name='Статус заказа')),
                ('comleted_time', models.DateTimeField(blank=True, null=True, verbose_name='Время выполнения')),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='tgbot.developer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='tgbot.user')),
            ],
        ),
        migrations.CreateModel(
            name='Conversions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users_quote', models.CharField(max_length=1000)),
                ('developers_quote', models.CharField(max_length=1000)),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='questions', to='tgbot.developer')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conversations', to='tgbot.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='details', to='tgbot.user')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='tariff',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='users', to='tgbot.tariff'),
        ),
    ]
